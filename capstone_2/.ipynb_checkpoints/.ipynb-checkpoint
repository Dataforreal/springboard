{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Capstone 2 Arima Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Using TensorFlow backend.\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "pd.set_option('display.float_format', lambda x: '%.4f' % x)\n",
    "import seaborn as sns\n",
    "sns.set_context(\"paper\", font_scale=1.3)\n",
    "sns.set_style('white')\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "from time import time\n",
    "import matplotlib.ticker as tkr\n",
    "from scipy import stats\n",
    "from statsmodels.tsa.stattools import adfuller\n",
    "from sklearn import preprocessing\n",
    "from statsmodels.tsa.stattools import pacf\n",
    "%matplotlib inline\n",
    "import math\n",
    "import keras\n",
    "from keras.models import Sequential\n",
    "from keras.layers import Dense\n",
    "from keras.layers import LSTM\n",
    "from keras.layers import Dropout\n",
    "from keras.layers import *\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "from sklearn.metrics import mean_squared_error\n",
    "from sklearn.metrics import mean_absolute_error\n",
    "from keras.callbacks import EarlyStopping"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "#get data\n",
    "eurusd = pd.read_csv(r'eurusd.csv', index_col=0, parse_dates=True, skipinitialspace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>close</th>\n",
       "      <th>Change</th>\n",
       "      <th>Volume</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>2000-01-03</td>\n",
       "      <td>1.0085</td>\n",
       "      <td>1.0280</td>\n",
       "      <td>1.0055</td>\n",
       "      <td>1.0256</td>\n",
       "      <td>0.0168</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2000-01-04</td>\n",
       "      <td>1.0255</td>\n",
       "      <td>1.0340</td>\n",
       "      <td>1.0217</td>\n",
       "      <td>1.0301</td>\n",
       "      <td>0.0045</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2000-01-05</td>\n",
       "      <td>1.0304</td>\n",
       "      <td>1.0400</td>\n",
       "      <td>1.0289</td>\n",
       "      <td>1.0315</td>\n",
       "      <td>0.0014</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2000-01-06</td>\n",
       "      <td>1.0320</td>\n",
       "      <td>1.0413</td>\n",
       "      <td>1.0283</td>\n",
       "      <td>1.0315</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2000-01-07</td>\n",
       "      <td>1.0317</td>\n",
       "      <td>1.0333</td>\n",
       "      <td>1.0263</td>\n",
       "      <td>1.0296</td>\n",
       "      <td>-0.0019</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Open   High    Low  close  Change  Volume\n",
       "date                                                  \n",
       "2000-01-03 1.0085 1.0280 1.0055 1.0256  0.0168       0\n",
       "2000-01-04 1.0255 1.0340 1.0217 1.0301  0.0045       0\n",
       "2000-01-05 1.0304 1.0400 1.0289 1.0315  0.0014       0\n",
       "2000-01-06 1.0320 1.0413 1.0283 1.0315  0.0000       0\n",
       "2000-01-07 1.0317 1.0333 1.0263 1.0296 -0.0019       0"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "eurusd.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>close</th>\n",
       "      <th>Change</th>\n",
       "      <th>Volume</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>2019-12-20</td>\n",
       "      <td>1.1120</td>\n",
       "      <td>1.1125</td>\n",
       "      <td>1.1066</td>\n",
       "      <td>1.1075</td>\n",
       "      <td>-0.0045</td>\n",
       "      <td>119919</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2019-12-23</td>\n",
       "      <td>1.1082</td>\n",
       "      <td>1.1095</td>\n",
       "      <td>1.1070</td>\n",
       "      <td>1.1088</td>\n",
       "      <td>0.0014</td>\n",
       "      <td>109071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2019-12-24</td>\n",
       "      <td>1.1088</td>\n",
       "      <td>1.1094</td>\n",
       "      <td>1.1069</td>\n",
       "      <td>1.1088</td>\n",
       "      <td>-0.0001</td>\n",
       "      <td>102337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2019-12-26</td>\n",
       "      <td>1.1093</td>\n",
       "      <td>1.1112</td>\n",
       "      <td>1.1082</td>\n",
       "      <td>1.1095</td>\n",
       "      <td>0.0008</td>\n",
       "      <td>59499</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2019-12-27</td>\n",
       "      <td>1.1095</td>\n",
       "      <td>1.1188</td>\n",
       "      <td>1.1094</td>\n",
       "      <td>1.1173</td>\n",
       "      <td>0.0077</td>\n",
       "      <td>157620</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Open   High    Low  close  Change  Volume\n",
       "date                                                  \n",
       "2019-12-20 1.1120 1.1125 1.1066 1.1075 -0.0045  119919\n",
       "2019-12-23 1.1082 1.1095 1.1070 1.1088  0.0014  109071\n",
       "2019-12-24 1.1088 1.1094 1.1069 1.1088 -0.0001  102337\n",
       "2019-12-26 1.1093 1.1112 1.1082 1.1095  0.0008   59499\n",
       "2019-12-27 1.1095 1.1188 1.1094 1.1173  0.0077  157620"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "eurusd.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DatetimeIndex(['2000-01-03', '2000-01-04', '2000-01-05', '2000-01-06',\n",
       "               '2000-01-07', '2000-01-10', '2000-01-11', '2000-01-12',\n",
       "               '2000-01-13', '2000-01-14',\n",
       "               ...\n",
       "               '2019-12-13', '2019-12-16', '2019-12-17', '2019-12-18',\n",
       "               '2019-12-19', '2019-12-20', '2019-12-23', '2019-12-24',\n",
       "               '2019-12-26', '2019-12-27'],\n",
       "              dtype='datetime64[ns]', name='date', length=5187, freq=None)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "eurusd.index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Open      float64\n",
       "High      float64\n",
       "Low       float64\n",
       "close     float64\n",
       "Change    float64\n",
       "Volume      int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "eurusd.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "eurusdclose = eurusd.close"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count   5187.0000\n",
       "mean       1.2093\n",
       "std        0.1666\n",
       "min        0.8271\n",
       "25%        1.1105\n",
       "50%        1.2259\n",
       "75%        1.3314\n",
       "max        1.5990\n",
       "Name: close, dtype: float64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "eurusdclose.describe() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Open      0\n",
      "High      0\n",
      "Low       0\n",
      "close     0\n",
      "Change    0\n",
      "Volume    0\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# Check for missing data\n",
    "print(eurusd.isnull().sum())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "There are no missing values in the data set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Check for outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1eb58d1a550>"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "eurusdclose.hist()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Statistical Normality Test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Quantify whether data looks as though it was drawn from a Gaussian distribution, using the D’Agostino’s K² Test."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### p <= alpha: reject H0, not normal.\n",
    "\n",
    "### p > alpha: fail to reject H0, normal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Statistics=137.136, p=0.000\n",
      "Data does not look Gaussian (reject H0)\n"
     ]
    }
   ],
   "source": [
    "stat, p = stats.normaltest(eurusd.close)\n",
    "print('Statistics=%.3f, p=%.3f' % (stat, p))\n",
    "alpha = 0.05\n",
    "if p > alpha:\n",
    "    print('Data looks Gaussian (fail to reject H0)')\n",
    "else:\n",
    "    print('Data does not look Gaussian (reject H0)')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Kurtosis of normal distribution: -0.43668157335097213\n",
      "Skewness of normal distribution: -0.28722463936355497\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(eurusd.close);\n",
    "print( 'Kurtosis of normal distribution: {}'.format(stats.kurtosis(eurusd.close)))\n",
    "print( 'Skewness of normal distribution: {}'.format(stats.skew(eurusd.close)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### The kurtosis of the distributiion above is less than zero and is light tailed. The distribution is fairly symmetrical"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>Open</td>\n",
       "      <td>5187.0000</td>\n",
       "      <td>1.2093</td>\n",
       "      <td>0.1666</td>\n",
       "      <td>0.8266</td>\n",
       "      <td>1.1103</td>\n",
       "      <td>1.2258</td>\n",
       "      <td>1.3315</td>\n",
       "      <td>1.5991</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>High</td>\n",
       "      <td>5187.0000</td>\n",
       "      <td>1.2147</td>\n",
       "      <td>0.1672</td>\n",
       "      <td>0.8322</td>\n",
       "      <td>1.1149</td>\n",
       "      <td>1.2313</td>\n",
       "      <td>1.3372</td>\n",
       "      <td>1.6038</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Low</td>\n",
       "      <td>5187.0000</td>\n",
       "      <td>1.2039</td>\n",
       "      <td>0.1658</td>\n",
       "      <td>0.8230</td>\n",
       "      <td>1.1067</td>\n",
       "      <td>1.2196</td>\n",
       "      <td>1.3254</td>\n",
       "      <td>1.5866</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>close</td>\n",
       "      <td>5187.0000</td>\n",
       "      <td>1.2093</td>\n",
       "      <td>0.1666</td>\n",
       "      <td>0.8271</td>\n",
       "      <td>1.1105</td>\n",
       "      <td>1.2259</td>\n",
       "      <td>1.3314</td>\n",
       "      <td>1.5990</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Change</td>\n",
       "      <td>5187.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0074</td>\n",
       "      <td>-0.0348</td>\n",
       "      <td>-0.0041</td>\n",
       "      <td>0.0001</td>\n",
       "      <td>0.0041</td>\n",
       "      <td>0.0467</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>Volume</td>\n",
       "      <td>5187.0000</td>\n",
       "      <td>119833.2103</td>\n",
       "      <td>155557.6128</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>229402.5000</td>\n",
       "      <td>763921.0000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           count        mean         std     min     25%    50%         75%  \\\n",
       "Open   5187.0000      1.2093      0.1666  0.8266  1.1103 1.2258      1.3315   \n",
       "High   5187.0000      1.2147      0.1672  0.8322  1.1149 1.2313      1.3372   \n",
       "Low    5187.0000      1.2039      0.1658  0.8230  1.1067 1.2196      1.3254   \n",
       "close  5187.0000      1.2093      0.1666  0.8271  1.1105 1.2259      1.3314   \n",
       "Change 5187.0000      0.0000      0.0074 -0.0348 -0.0041 0.0001      0.0041   \n",
       "Volume 5187.0000 119833.2103 155557.6128  0.0000  0.0000 0.0000 229402.5000   \n",
       "\n",
       "               max  \n",
       "Open        1.5991  \n",
       "High        1.6038  \n",
       "Low         1.5866  \n",
       "close       1.5990  \n",
       "Change      0.0467  \n",
       "Volume 763921.0000  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 1008x432 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(14,6))\n",
    "plt.subplot(1,2,1)\n",
    "eurusd['close'].hist(bins=50)\n",
    "plt.title('eurusd exchange rate Distribution')\n",
    "plt.subplot(1,2,2)\n",
    "stats.probplot(eurusd['close'], plot=plt);\n",
    "eurusd.describe().T"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Stationarity\n",
    "I used the Dickey–Fuller test to test the null hypothesis that a unit root is present in an autoregressive model. \n",
    "Stationary series has constant mean and variance over time. \n",
    "Rolling average and the rolling standard deviation of time series do not change over time."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Dickey-Fuller test\n",
    "Null Hypothesis (H0): Time series has a unit root, meaning it is non-stationary.\n",
    "Alternate Hypothesis (H1): Suggests the time series does not have a unit root, meaning it is stationary. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### p-value > 0.05: Accept the null hypothesis (H0), the data has a unit root and is non-stationary.\n",
    "#### p-value <= 0.05: Reject the null hypothesis (H0), the data does not have a unit root and is stationary."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1008x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<Results of Dickey-Fuller Test>\n",
      "Test Statistic                  -1.7338\n",
      "p-value                          0.4138\n",
      "#Lags Used                       0.0000\n",
      "Number of Observations Used   5186.0000\n",
      "Critical Value (1%)             -3.4316\n",
      "Critical Value (5%)             -2.8621\n",
      "Critical Value (10%)            -2.5671\n",
      "dtype: float64\n"
     ]
    }
   ],
   "source": [
    "df2=eurusd.resample('D', how=np.mean)\n",
    "def test_stationarity(timeseries):\n",
    "\n",
    "    rolmean = timeseries.rolling(window=30).mean()\n",
    "\n",
    "    rolstd = timeseries.rolling(window=30).std()\n",
    "\n",
    "    \n",
    "\n",
    "    plt.figure(figsize=(14,5))\n",
    "\n",
    "    sns.despine(left=True)\n",
    "\n",
    "    orig = plt.plot(timeseries, color='blue',label='Original')\n",
    "\n",
    "    mean = plt.plot(rolmean, color='red', label='Rolling Mean')\n",
    "\n",
    "    std = plt.plot(rolstd, color='black', label = 'Rolling Std')\n",
    "\n",
    "\n",
    "\n",
    "    plt.legend(loc='best'); plt.title('Rolling Mean & Standard Deviation')\n",
    "\n",
    "    plt.show()\n",
    "\n",
    "    \n",
    "\n",
    "    print ('<Results of Dickey-Fuller Test>')\n",
    "\n",
    "    dftest = adfuller(timeseries, autolag='AIC')\n",
    "\n",
    "    dfoutput = pd.Series(dftest[0:4],\n",
    "\n",
    "                         index=['Test Statistic','p-value','#Lags Used','Number of Observations Used'])\n",
    "\n",
    "    for key,value in dftest[4].items():\n",
    "\n",
    "        dfoutput['Critical Value (%s)'%key] = value\n",
    "\n",
    "    print(dfoutput)\n",
    "\n",
    "test_stationarity(df2.close.dropna())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the above results, it is clear that the Standard deviation is stationary, while the mean is not. We will reject the null hypothesis H0, the data does not have a unit root and is stationary."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Feature engineering"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1.0256 , 1.0301 , 1.0315 , ..., 1.10877, 1.10952, 1.11726])"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset = pd.read_csv(r'eurusd.csv', index_col=0, parse_dates=True, skipinitialspace=True)\n",
    "eurusd = eurusd.close.values #numpy.ndarray\n",
    "eurusd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1.0256 ],\n",
       "       [1.0301 ],\n",
       "       [1.0315 ],\n",
       "       ...,\n",
       "       [1.10877],\n",
       "       [1.10952],\n",
       "       [1.11726]])"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "eurusd = np.reshape(eurusd, (-1, 1))\n",
    "eurusd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_size = int(len(eurusd) * 0.80)\n",
    "\n",
    "test_size = len(eurusd) - train_size\n",
    "\n",
    "train, test = eurusd[0:train_size,:], eurusd[train_size:len(eurusd),:]\n",
    "\n",
    "scaler = MinMaxScaler(feature_range=(0, 1))\n",
    "\n",
    "train = scaler.fit_transform(train)\n",
    "\n",
    "test = scaler.fit_transform(test)\n",
    "\n",
    "def create_dataset(eurusd, look_back=1):\n",
    "\n",
    "    X, Y = [], []\n",
    "\n",
    "    for i in range(len(eurusd)-look_back-1):\n",
    "\n",
    "        a = eurusd[i:(i+look_back), 0]\n",
    "\n",
    "        X.append(a)\n",
    "\n",
    "        Y.append(eurusd[i + look_back, 0])\n",
    "\n",
    "    return np.array(X), np.array(Y)\n",
    "\n",
    "    \n",
    "\n",
    "look_back = 30\n",
    "\n",
    "X_train, Y_train = create_dataset(train, look_back)\n",
    "\n",
    "X_test, Y_test = create_dataset(test, look_back)\n",
    "\n",
    "\n",
    "\n",
    "# reshape input to be [samples, time steps, features]\n",
    "\n",
    "X_train = np.reshape(X_train, (X_train.shape[0], 1, X_train.shape[1]))\n",
    "\n",
    "X_test = np.reshape(X_test, (X_test.shape[0], 1, X_test.shape[1]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Model Architecture"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train on 4118 samples, validate on 1007 samples\n",
      "Epoch 1/1000\n",
      "4118/4118 [==============================] - 1s 126us/step - loss: 0.0064 - accuracy: 4.8567e-04 - val_loss: 0.0051 - val_accuracy: 0.0020\n",
      "Epoch 2/1000\n",
      "4118/4118 [==============================] - 0s 49us/step - loss: 0.0043 - accuracy: 4.8567e-04 - val_loss: 0.0047 - val_accuracy: 0.0020\n",
      "Epoch 3/1000\n",
      "4118/4118 [==============================] - 0s 46us/step - loss: 0.0040 - accuracy: 4.8567e-04 - val_loss: 0.0054 - val_accuracy: 0.0020\n",
      "Epoch 4/1000\n",
      "4118/4118 [==============================] - 0s 49us/step - loss: 0.0039 - accuracy: 4.8567e-04 - val_loss: 0.0053 - val_accuracy: 0.0020\n",
      "Epoch 5/1000\n",
      "4118/4118 [==============================] - 0s 44us/step - loss: 0.0035 - accuracy: 4.8567e-04 - val_loss: 0.0041 - val_accuracy: 0.0020\n",
      "Epoch 6/1000\n",
      "4118/4118 [==============================] - 0s 46us/step - loss: 0.0033 - accuracy: 4.8567e-04 - val_loss: 0.0045 - val_accuracy: 0.0020\n",
      "Epoch 7/1000\n",
      "4118/4118 [==============================] - 0s 52us/step - loss: 0.0031 - accuracy: 4.8567e-04 - val_loss: 0.0037 - val_accuracy: 0.0020\n",
      "Epoch 8/1000\n",
      "4118/4118 [==============================] - 0s 44us/step - loss: 0.0026 - accuracy: 4.8567e-04 - val_loss: 0.0031 - val_accuracy: 0.0020\n",
      "Epoch 9/1000\n",
      "4118/4118 [==============================] - 0s 49us/step - loss: 0.0023 - accuracy: 4.8567e-04 - val_loss: 0.0029 - val_accuracy: 0.0020\n",
      "Epoch 10/1000\n",
      "4118/4118 [==============================] - 0s 48us/step - loss: 0.0021 - accuracy: 4.8567e-04 - val_loss: 0.0023 - val_accuracy: 0.0020\n",
      "Epoch 11/1000\n",
      "4118/4118 [==============================] - 0s 50us/step - loss: 0.0018 - accuracy: 4.8567e-04 - val_loss: 0.0021 - val_accuracy: 0.0020\n",
      "Epoch 12/1000\n",
      "4118/4118 [==============================] - 0s 51us/step - loss: 0.0017 - accuracy: 4.8567e-04 - val_loss: 0.0020 - val_accuracy: 0.0020\n",
      "Epoch 13/1000\n",
      "4118/4118 [==============================] - 0s 47us/step - loss: 0.0017 - accuracy: 4.8567e-04 - val_loss: 0.0019 - val_accuracy: 0.0020\n",
      "Epoch 14/1000\n",
      "4118/4118 [==============================] - 0s 46us/step - loss: 0.0018 - accuracy: 4.8567e-04 - val_loss: 0.0019 - val_accuracy: 0.0020\n",
      "Epoch 15/1000\n",
      "4118/4118 [==============================] - 0s 46us/step - loss: 0.0017 - accuracy: 4.8567e-04 - val_loss: 0.0019 - val_accuracy: 0.0020\n",
      "Epoch 16/1000\n",
      "4118/4118 [==============================] - 0s 49us/step - loss: 0.0021 - accuracy: 4.8567e-04 - val_loss: 0.0019 - val_accuracy: 0.0020\n",
      "Epoch 17/1000\n",
      "4118/4118 [==============================] - 0s 50us/step - loss: 0.0020 - accuracy: 4.8567e-04 - val_loss: 0.0018 - val_accuracy: 0.0020\n",
      "Epoch 18/1000\n",
      "4118/4118 [==============================] - 0s 50us/step - loss: 0.0019 - accuracy: 4.8567e-04 - val_loss: 0.0017 - val_accuracy: 0.0020\n",
      "Epoch 19/1000\n",
      "4118/4118 [==============================] - 0s 45us/step - loss: 0.0015 - accuracy: 4.8567e-04 - val_loss: 0.0016 - val_accuracy: 0.0020\n",
      "Epoch 20/1000\n",
      "4118/4118 [==============================] - 0s 49us/step - loss: 0.0015 - accuracy: 4.8567e-04 - val_loss: 0.0018 - val_accuracy: 0.0020\n",
      "Epoch 21/1000\n",
      "4118/4118 [==============================] - 0s 46us/step - loss: 0.0019 - accuracy: 4.8567e-04 - val_loss: 0.0017 - val_accuracy: 0.0020\n",
      "Epoch 22/1000\n",
      "4118/4118 [==============================] - 0s 53us/step - loss: 0.0016 - accuracy: 4.8567e-04 - val_loss: 0.0016 - val_accuracy: 0.0020\n",
      "Epoch 23/1000\n",
      "4118/4118 [==============================] - 0s 49us/step - loss: 0.0016 - accuracy: 4.8567e-04 - val_loss: 0.0016 - val_accuracy: 0.0020\n",
      "Epoch 24/1000\n",
      "4118/4118 [==============================] - 0s 50us/step - loss: 0.0016 - accuracy: 4.8567e-04 - val_loss: 0.0017 - val_accuracy: 0.0020\n",
      "Epoch 25/1000\n",
      "4118/4118 [==============================] - 0s 48us/step - loss: 0.0017 - accuracy: 4.8567e-04 - val_loss: 0.0017 - val_accuracy: 0.0020\n",
      "Epoch 26/1000\n",
      "4118/4118 [==============================] - 0s 46us/step - loss: 0.0017 - accuracy: 4.8567e-04 - val_loss: 0.0017 - val_accuracy: 0.0020\n",
      "Epoch 27/1000\n",
      "4118/4118 [==============================] - 0s 51us/step - loss: 0.0016 - accuracy: 4.8567e-04 - val_loss: 0.0016 - val_accuracy: 0.0020\n",
      "Epoch 28/1000\n",
      "4118/4118 [==============================] - 0s 46us/step - loss: 0.0015 - accuracy: 4.8567e-04 - val_loss: 0.0015 - val_accuracy: 0.0020\n",
      "Epoch 29/1000\n",
      "4118/4118 [==============================] - 0s 53us/step - loss: 0.0014 - accuracy: 4.8567e-04 - val_loss: 0.0015 - val_accuracy: 0.0020\n",
      "Epoch 30/1000\n",
      "4118/4118 [==============================] - 0s 46us/step - loss: 0.0015 - accuracy: 4.8567e-04 - val_loss: 0.0015 - val_accuracy: 0.0020\n",
      "Epoch 31/1000\n",
      "4118/4118 [==============================] - 0s 50us/step - loss: 0.0014 - accuracy: 4.8567e-04 - val_loss: 0.0015 - val_accuracy: 0.0020\n",
      "Epoch 32/1000\n",
      "4118/4118 [==============================] - 0s 49us/step - loss: 0.0015 - accuracy: 4.8567e-04 - val_loss: 0.0016 - val_accuracy: 0.0020\n",
      "Epoch 33/1000\n",
      "4118/4118 [==============================] - 0s 44us/step - loss: 0.0018 - accuracy: 4.8567e-04 - val_loss: 0.0017 - val_accuracy: 0.0020\n",
      "Epoch 34/1000\n",
      "4118/4118 [==============================] - 0s 48us/step - loss: 0.0017 - accuracy: 4.8567e-04 - val_loss: 0.0015 - val_accuracy: 0.0020\n",
      "Epoch 35/1000\n",
      "4118/4118 [==============================] - 0s 46us/step - loss: 0.0015 - accuracy: 4.8567e-04 - val_loss: 0.0015 - val_accuracy: 0.0020\n",
      "Epoch 36/1000\n",
      "4118/4118 [==============================] - 0s 56us/step - loss: 0.0014 - accuracy: 4.8567e-04 - val_loss: 0.0015 - val_accuracy: 0.0020\n",
      "Epoch 37/1000\n",
      "4118/4118 [==============================] - 0s 49us/step - loss: 0.0012 - accuracy: 4.8567e-04 - val_loss: 0.0014 - val_accuracy: 0.0020\n",
      "Epoch 38/1000\n",
      "4118/4118 [==============================] - 0s 46us/step - loss: 0.0012 - accuracy: 4.8567e-04 - val_loss: 0.0014 - val_accuracy: 0.0020\n",
      "Epoch 39/1000\n",
      "4118/4118 [==============================] - 0s 45us/step - loss: 0.0012 - accuracy: 4.8567e-04 - val_loss: 0.0014 - val_accuracy: 0.0020\n",
      "Epoch 40/1000\n",
      "4118/4118 [==============================] - 0s 45us/step - loss: 0.0012 - accuracy: 4.8567e-04 - val_loss: 0.0014 - val_accuracy: 0.0020\n",
      "Epoch 41/1000\n",
      "4118/4118 [==============================] - 0s 48us/step - loss: 0.0012 - accuracy: 4.8567e-04 - val_loss: 0.0015 - val_accuracy: 0.0020\n",
      "Epoch 42/1000\n",
      "4118/4118 [==============================] - 0s 53us/step - loss: 0.0016 - accuracy: 4.8567e-04 - val_loss: 0.0015 - val_accuracy: 0.0020\n",
      "Epoch 43/1000\n",
      "4118/4118 [==============================] - 0s 46us/step - loss: 0.0018 - accuracy: 4.8567e-04 - val_loss: 0.0015 - val_accuracy: 0.0020\n",
      "Epoch 44/1000\n",
      "4118/4118 [==============================] - 0s 44us/step - loss: 0.0017 - accuracy: 4.8567e-04 - val_loss: 0.0014 - val_accuracy: 0.0020\n",
      "Epoch 45/1000\n",
      "4118/4118 [==============================] - 0s 45us/step - loss: 0.0014 - accuracy: 4.8567e-04 - val_loss: 0.0014 - val_accuracy: 0.0020\n",
      "Epoch 46/1000\n",
      "4118/4118 [==============================] - 0s 51us/step - loss: 0.0013 - accuracy: 4.8567e-04 - val_loss: 0.0014 - val_accuracy: 0.0020\n",
      "Epoch 47/1000\n",
      "4118/4118 [==============================] - 0s 48us/step - loss: 0.0011 - accuracy: 4.8567e-04 - val_loss: 0.0013 - val_accuracy: 0.0020\n",
      "Epoch 48/1000\n",
      "4118/4118 [==============================] - 0s 42us/step - loss: 0.0012 - accuracy: 4.8567e-04 - val_loss: 0.0014 - val_accuracy: 0.0020\n",
      "Epoch 49/1000\n",
      "4118/4118 [==============================] - 0s 44us/step - loss: 0.0012 - accuracy: 4.8567e-04 - val_loss: 0.0014 - val_accuracy: 0.0020\n",
      "Epoch 50/1000\n",
      "4118/4118 [==============================] - 0s 47us/step - loss: 0.0013 - accuracy: 4.8567e-04 - val_loss: 0.0015 - val_accuracy: 0.0020\n",
      "Epoch 51/1000\n",
      "4118/4118 [==============================] - 0s 44us/step - loss: 0.0015 - accuracy: 4.8567e-04 - val_loss: 0.0014 - val_accuracy: 0.0020\n",
      "Epoch 52/1000\n",
      "4118/4118 [==============================] - 0s 48us/step - loss: 0.0014 - accuracy: 4.8567e-04 - val_loss: 0.0014 - val_accuracy: 0.0020\n",
      "Epoch 53/1000\n",
      "4118/4118 [==============================] - 0s 46us/step - loss: 0.0015 - accuracy: 4.8567e-04 - val_loss: 0.0014 - val_accuracy: 0.0020\n",
      "Epoch 54/1000\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4118/4118 [==============================] - 0s 46us/step - loss: 0.0013 - accuracy: 4.8567e-04 - val_loss: 0.0013 - val_accuracy: 0.0020\n",
      "Epoch 55/1000\n",
      "4118/4118 [==============================] - 0s 48us/step - loss: 9.9860e-04 - accuracy: 4.8567e-04 - val_loss: 0.0014 - val_accuracy: 0.0020\n",
      "Epoch 56/1000\n",
      "4118/4118 [==============================] - 0s 44us/step - loss: 0.0013 - accuracy: 4.8567e-04 - val_loss: 0.0013 - val_accuracy: 0.0020\n",
      "Epoch 57/1000\n",
      "4118/4118 [==============================] - 0s 45us/step - loss: 0.0014 - accuracy: 4.8567e-04 - val_loss: 0.0013 - val_accuracy: 0.0020\n",
      "Epoch 58/1000\n",
      "4118/4118 [==============================] - 0s 50us/step - loss: 0.0013 - accuracy: 4.8567e-04 - val_loss: 0.0013 - val_accuracy: 0.0020\n",
      "Epoch 59/1000\n",
      "4118/4118 [==============================] - 0s 46us/step - loss: 0.0012 - accuracy: 4.8567e-04 - val_loss: 0.0014 - val_accuracy: 0.0020\n",
      "Epoch 60/1000\n",
      "4118/4118 [==============================] - 0s 54us/step - loss: 0.0014 - accuracy: 4.8567e-04 - val_loss: 0.0014 - val_accuracy: 0.0020\n",
      "Epoch 61/1000\n",
      "4118/4118 [==============================] - 0s 51us/step - loss: 0.0014 - accuracy: 4.8567e-04 - val_loss: 0.0015 - val_accuracy: 0.0020\n",
      "Epoch 62/1000\n",
      "4118/4118 [==============================] - 0s 45us/step - loss: 0.0011 - accuracy: 4.8567e-04 - val_loss: 0.0012 - val_accuracy: 0.0020\n",
      "Epoch 63/1000\n",
      "4118/4118 [==============================] - 0s 50us/step - loss: 9.9036e-04 - accuracy: 4.8567e-04 - val_loss: 0.0012 - val_accuracy: 0.0020\n",
      "Epoch 64/1000\n",
      "4118/4118 [==============================] - 0s 46us/step - loss: 8.8234e-04 - accuracy: 4.8567e-04 - val_loss: 0.0013 - val_accuracy: 0.0020\n",
      "Epoch 65/1000\n",
      "4118/4118 [==============================] - 0s 47us/step - loss: 0.0012 - accuracy: 4.8567e-04 - val_loss: 0.0013 - val_accuracy: 0.0020\n",
      "Epoch 66/1000\n",
      "4118/4118 [==============================] - 0s 47us/step - loss: 0.0012 - accuracy: 4.8567e-04 - val_loss: 0.0013 - val_accuracy: 0.0020\n",
      "Epoch 67/1000\n",
      "4118/4118 [==============================] - 0s 46us/step - loss: 0.0011 - accuracy: 4.8567e-04 - val_loss: 0.0013 - val_accuracy: 0.0020\n",
      "Epoch 68/1000\n",
      "4118/4118 [==============================] - 0s 50us/step - loss: 0.0013 - accuracy: 4.8567e-04 - val_loss: 0.0014 - val_accuracy: 0.0020\n",
      "Epoch 69/1000\n",
      "4118/4118 [==============================] - 0s 44us/step - loss: 0.0016 - accuracy: 4.8567e-04 - val_loss: 0.0014 - val_accuracy: 0.0020\n",
      "Epoch 70/1000\n",
      "4118/4118 [==============================] - 0s 47us/step - loss: 0.0013 - accuracy: 4.8567e-04 - val_loss: 0.0012 - val_accuracy: 0.0020\n",
      "Epoch 71/1000\n",
      "4118/4118 [==============================] - 0s 46us/step - loss: 0.0012 - accuracy: 4.8567e-04 - val_loss: 0.0013 - val_accuracy: 0.0020\n",
      "Epoch 72/1000\n",
      "4118/4118 [==============================] - 0s 48us/step - loss: 9.6985e-04 - accuracy: 4.8567e-04 - val_loss: 0.0013 - val_accuracy: 0.0020\n",
      "Epoch 73/1000\n",
      "4118/4118 [==============================] - 0s 45us/step - loss: 8.3839e-04 - accuracy: 4.8567e-04 - val_loss: 0.0011 - val_accuracy: 0.0020\n",
      "Epoch 74/1000\n",
      "4118/4118 [==============================] - 0s 46us/step - loss: 7.5548e-04 - accuracy: 4.8567e-04 - val_loss: 0.0012 - val_accuracy: 0.0020\n",
      "Epoch 75/1000\n",
      "4118/4118 [==============================] - 0s 52us/step - loss: 9.0824e-04 - accuracy: 4.8567e-04 - val_loss: 0.0012 - val_accuracy: 0.0020\n",
      "Epoch 76/1000\n",
      "4118/4118 [==============================] - 0s 44us/step - loss: 0.0010 - accuracy: 4.8567e-04 - val_loss: 0.0013 - val_accuracy: 0.0020\n",
      "Epoch 77/1000\n",
      "4118/4118 [==============================] - 0s 45us/step - loss: 0.0012 - accuracy: 4.8567e-04 - val_loss: 0.0013 - val_accuracy: 0.0020\n",
      "Epoch 78/1000\n",
      "4118/4118 [==============================] - 0s 58us/step - loss: 0.0013 - accuracy: 4.8567e-04 - val_loss: 0.0013 - val_accuracy: 0.0020\n",
      "Epoch 79/1000\n",
      "4118/4118 [==============================] - 0s 54us/step - loss: 0.0012 - accuracy: 4.8567e-04 - val_loss: 0.0012 - val_accuracy: 0.0020\n",
      "Epoch 80/1000\n",
      "4118/4118 [==============================] - 0s 54us/step - loss: 0.0012 - accuracy: 4.8567e-04 - val_loss: 0.0012 - val_accuracy: 0.0020\n",
      "Epoch 81/1000\n",
      "4118/4118 [==============================] - 0s 46us/step - loss: 0.0012 - accuracy: 4.8567e-04 - val_loss: 0.0012 - val_accuracy: 0.0020\n",
      "Epoch 82/1000\n",
      "4118/4118 [==============================] - 0s 48us/step - loss: 9.7558e-04 - accuracy: 4.8567e-04 - val_loss: 0.0012 - val_accuracy: 0.0020\n",
      "Epoch 83/1000\n",
      "4118/4118 [==============================] - 0s 47us/step - loss: 9.9402e-04 - accuracy: 4.8567e-04 - val_loss: 0.0013 - val_accuracy: 0.0020\n",
      "Model: \"sequential_8\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "lstm_8 (LSTM)                (None, 100)               52400     \n",
      "_________________________________________________________________\n",
      "dropout_8 (Dropout)          (None, 100)               0         \n",
      "_________________________________________________________________\n",
      "dense_8 (Dense)              (None, 1)                 101       \n",
      "=================================================================\n",
      "Total params: 52,501\n",
      "Trainable params: 52,501\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "model = Sequential()\n",
    "\n",
    "model.add(LSTM(100, input_shape=(X_train.shape[1], X_train.shape[2])))\n",
    "\n",
    "model.add(Dropout(0.2))\n",
    "\n",
    "model.add(Dense(1))\n",
    "\n",
    "model.compile(loss='mean_squared_error', optimizer='adam', metrics=['accuracy'])\n",
    "\n",
    "\n",
    "\n",
    "history = model.fit(X_train, Y_train, epochs=1000, batch_size=70, validation_data=(X_test, Y_test), \n",
    "\n",
    "                    callbacks=[EarlyStopping(monitor='val_loss', patience=10)], verbose=1, shuffle=False)\n",
    "\n",
    "\n",
    "\n",
    "model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Mean Absolute Error: 0.003837246065766032\n",
      "Train Root Mean Squared Error: 0.004977217976653637\n",
      "Test Mean Absolute Error: 0.005845646429847933\n",
      "Test Root Mean Squared Error: 0.007540708258082675\n"
     ]
    }
   ],
   "source": [
    "train_predict = model.predict(X_train)\n",
    "test_predict = model.predict(X_test)\n",
    "# invert predictions\n",
    "train_predict = scaler.inverse_transform(train_predict)\n",
    "Y_train = scaler.inverse_transform([Y_train])\n",
    "test_predict = scaler.inverse_transform(test_predict)\n",
    "Y_test = scaler.inverse_transform([Y_test])\n",
    "print('Train Mean Absolute Error:', mean_absolute_error(Y_train[0], train_predict[:,0]))\n",
    "print('Train Root Mean Squared Error:',np.sqrt(mean_squared_error(Y_train[0], train_predict[:,0])))\n",
    "print('Test Mean Absolute Error:', mean_absolute_error(Y_test[0], test_predict[:,0]))\n",
    "print('Test Root Mean Squared Error:',np.sqrt(mean_squared_error(Y_test[0], test_predict[:,0])))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Model Loss"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8,4))\n",
    "plt.plot(history.history['loss'], label='Train Loss')\n",
    "plt.plot(history.history['val_loss'], label='Test Loss')\n",
    "plt.title('model loss')\n",
    "plt.ylabel('loss')\n",
    "plt.xlabel('epochs')\n",
    "plt.legend(loc='upper right')\n",
    "plt.show();"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Compare actual and prediction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "aa=[x for x in range(200)]\n",
    "plt.figure(figsize=(8,4))\n",
    "plt.plot(aa, Y_test[0][:200], marker='.', label=\"actual\")\n",
    "plt.plot(aa, test_predict[:,0][:200], 'r', label=\"prediction\")\n",
    "# plt.tick_params(left=False, labelleft=True) #remove ticks\n",
    "plt.tight_layout()\n",
    "sns.despine(top=True)\n",
    "plt.subplots_adjust(left=0.07)\n",
    "plt.ylabel('close', size=15)\n",
    "plt.xlabel('date', size=15)\n",
    "plt.legend(fontsize=15)\n",
    "plt.show();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
